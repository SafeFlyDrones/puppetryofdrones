//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ow2.authzforce.core.xmlns.pdp;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.ow2.authzforce.xmlns.pdp.ext.AbstractAttributeProvider;
import org.ow2.authzforce.xmlns.pdp.ext.AbstractDecisionCache;
import org.ow2.authzforce.xmlns.pdp.ext.AbstractPolicyProvider;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="attributeDatatype" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="function" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="combiningAlgorithm" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/>
 *         <element ref="{http://authzforce.github.io/core/xmlns/pdp/8}attributeProvider" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="policyProvider" type="{http://authzforce.github.io/xmlns/pdp/ext/3}AbstractPolicyProvider" maxOccurs="unbounded"/>
 *         <element name="rootPolicyRef" type="{http://authzforce.github.io/core/xmlns/pdp/8}TopLevelPolicyElementRef" minOccurs="0"/>
 *         <element name="decisionCache" type="{http://authzforce.github.io/xmlns/pdp/ext/3}AbstractDecisionCache" minOccurs="0"/>
 *         <element name="ioProcChain" type="{http://authzforce.github.io/core/xmlns/pdp/8}InOutProcChain" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *       <attribute name="version" type="{http://www.w3.org/2001/XMLSchema}token" default="8.1" />
 *       <attribute name="standardDatatypesEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="standardFunctionsEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="standardCombiningAlgorithmsEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="standardAttributeProvidersEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       <attribute name="xPathEnabled" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="strictAttributeIssuerMatch" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       <attribute name="maxIntegerValue" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" default="2147483647" />
 *       <attribute name="maxVariableRefDepth" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *       <attribute name="maxPolicyRefDepth" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *       <attribute name="clientRequestErrorVerbosityLevel" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" default="0" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "attributeDatatypes",
    "functions",
    "combiningAlgorithms",
    "attributeProviders",
    "policyProviders",
    "rootPolicyRef",
    "decisionCache",
    "ioProcChains"
})
@XmlRootElement(name = "pdp")
public final class Pdp {

    @XmlElement(name = "attributeDatatype")
    @XmlSchemaType(name = "anyURI")
    private final List<String> attributeDatatypes;
    @XmlElement(name = "function")
    @XmlSchemaType(name = "anyURI")
    private final List<String> functions;
    @XmlElement(name = "combiningAlgorithm")
    @XmlSchemaType(name = "anyURI")
    private final List<String> combiningAlgorithms;
    @XmlElement(name = "attributeProvider")
    private final List<AbstractAttributeProvider> attributeProviders;
    @XmlElement(name = "policyProvider", required = true)
    private final List<AbstractPolicyProvider> policyProviders;
    private final TopLevelPolicyElementRef rootPolicyRef;
    private final AbstractDecisionCache decisionCache;
    @XmlElement(name = "ioProcChain")
    private final List<InOutProcChain> ioProcChains;
    @XmlAttribute(name = "version")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    private final String version;
    @XmlAttribute(name = "standardDatatypesEnabled")
    private final Boolean standardDatatypesEnabled;
    @XmlAttribute(name = "standardFunctionsEnabled")
    private final Boolean standardFunctionsEnabled;
    @XmlAttribute(name = "standardCombiningAlgorithmsEnabled")
    private final Boolean standardCombiningAlgorithmsEnabled;
    @XmlAttribute(name = "standardAttributeProvidersEnabled")
    private final Boolean standardAttributeProvidersEnabled;
    @XmlAttribute(name = "xPathEnabled")
    private final Boolean xPathEnabled;
    @XmlAttribute(name = "strictAttributeIssuerMatch")
    private final Boolean strictAttributeIssuerMatch;
    @XmlAttribute(name = "maxIntegerValue")
    @XmlSchemaType(name = "positiveInteger")
    private final BigInteger maxIntegerValue;
    @XmlAttribute(name = "maxVariableRefDepth")
    @XmlSchemaType(name = "nonNegativeInteger")
    private final BigInteger maxVariableRefDepth;
    @XmlAttribute(name = "maxPolicyRefDepth")
    @XmlSchemaType(name = "nonNegativeInteger")
    private final BigInteger maxPolicyRefDepth;
    @XmlAttribute(name = "clientRequestErrorVerbosityLevel")
    @XmlSchemaType(name = "nonNegativeInteger")
    private final BigInteger clientRequestErrorVerbosityLevel;

    public Pdp(final List<String> attributeDatatypes, final List<String> functions, final List<String> combiningAlgorithms, final List<AbstractAttributeProvider> attributeProviders, final List<AbstractPolicyProvider> policyProviders, final TopLevelPolicyElementRef rootPolicyRef, final AbstractDecisionCache decisionCache, final List<InOutProcChain> ioProcChains, final String version, final Boolean standardDatatypesEnabled, final Boolean standardFunctionsEnabled, final Boolean standardCombiningAlgorithmsEnabled, final Boolean standardAttributeProvidersEnabled, final Boolean xPathEnabled, final Boolean strictAttributeIssuerMatch, final BigInteger maxIntegerValue, final BigInteger maxVariableRefDepth, final BigInteger maxPolicyRefDepth, final BigInteger clientRequestErrorVerbosityLevel) {
        if (attributeDatatypes == null) {
            this.attributeDatatypes = null;
        } else {
            this.attributeDatatypes = new ArrayList<>(attributeDatatypes);
        }
        if (functions == null) {
            this.functions = null;
        } else {
            this.functions = new ArrayList<>(functions);
        }
        if (combiningAlgorithms == null) {
            this.combiningAlgorithms = null;
        } else {
            this.combiningAlgorithms = new ArrayList<>(combiningAlgorithms);
        }
        if (attributeProviders == null) {
            this.attributeProviders = null;
        } else {
            this.attributeProviders = new ArrayList<>(attributeProviders);
        }
        if (policyProviders == null) {
            this.policyProviders = null;
        } else {
            this.policyProviders = new ArrayList<>(policyProviders);
        }
        this.rootPolicyRef = rootPolicyRef;
        this.decisionCache = decisionCache;
        if (ioProcChains == null) {
            this.ioProcChains = null;
        } else {
            this.ioProcChains = new ArrayList<>(ioProcChains);
        }
        this.version = version;
        this.standardDatatypesEnabled = standardDatatypesEnabled;
        this.standardFunctionsEnabled = standardFunctionsEnabled;
        this.standardCombiningAlgorithmsEnabled = standardCombiningAlgorithmsEnabled;
        this.standardAttributeProvidersEnabled = standardAttributeProvidersEnabled;
        this.xPathEnabled = xPathEnabled;
        this.strictAttributeIssuerMatch = strictAttributeIssuerMatch;
        this.maxIntegerValue = maxIntegerValue;
        this.maxVariableRefDepth = maxVariableRefDepth;
        this.maxPolicyRefDepth = maxPolicyRefDepth;
        this.clientRequestErrorVerbosityLevel = clientRequestErrorVerbosityLevel;
    }

    /**
     * Used by JAX-B
     * 
     */
    protected Pdp() {
        this.attributeDatatypes = null;
        this.functions = null;
        this.combiningAlgorithms = null;
        this.attributeProviders = null;
        this.policyProviders = null;
        this.rootPolicyRef = null;
        this.decisionCache = null;
        this.ioProcChains = null;
        this.version = null;
        this.standardDatatypesEnabled = null;
        this.standardFunctionsEnabled = null;
        this.standardCombiningAlgorithmsEnabled = null;
        this.standardAttributeProvidersEnabled = null;
        this.xPathEnabled = null;
        this.strictAttributeIssuerMatch = null;
        this.maxIntegerValue = null;
        this.maxVariableRefDepth = null;
        this.maxPolicyRefDepth = null;
        this.clientRequestErrorVerbosityLevel = null;
    }

    /**
     * Gets the value of the rootPolicyRef property.
     * 
     * @return
     *     possible object is
     *     {@link TopLevelPolicyElementRef }
     *     
     */
    public TopLevelPolicyElementRef getRootPolicyRef() {
        return rootPolicyRef;
    }

    /**
     * Gets the value of the decisionCache property.
     * 
     * @return
     *     possible object is
     *     {@link AbstractDecisionCache }
     *     
     */
    public AbstractDecisionCache getDecisionCache() {
        return decisionCache;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        if (version == null) {
            return "8.1";
        } else {
            return version;
        }
    }

    /**
     * Gets the value of the standardDatatypesEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStandardDatatypesEnabled() {
        if (standardDatatypesEnabled == null) {
            return true;
        } else {
            return standardDatatypesEnabled;
        }
    }

    /**
     * Gets the value of the standardFunctionsEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStandardFunctionsEnabled() {
        if (standardFunctionsEnabled == null) {
            return true;
        } else {
            return standardFunctionsEnabled;
        }
    }

    /**
     * Gets the value of the standardCombiningAlgorithmsEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStandardCombiningAlgorithmsEnabled() {
        if (standardCombiningAlgorithmsEnabled == null) {
            return true;
        } else {
            return standardCombiningAlgorithmsEnabled;
        }
    }

    /**
     * Gets the value of the standardAttributeProvidersEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStandardAttributeProvidersEnabled() {
        if (standardAttributeProvidersEnabled == null) {
            return true;
        } else {
            return standardAttributeProvidersEnabled;
        }
    }

    /**
     * Gets the value of the xPathEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isXPathEnabled() {
        if (xPathEnabled == null) {
            return false;
        } else {
            return xPathEnabled;
        }
    }

    /**
     * Gets the value of the strictAttributeIssuerMatch property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStrictAttributeIssuerMatch() {
        if (strictAttributeIssuerMatch == null) {
            return false;
        } else {
            return strictAttributeIssuerMatch;
        }
    }

    /**
     * Gets the value of the maxIntegerValue property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxIntegerValue() {
        if (maxIntegerValue == null) {
            return new BigInteger("2147483647");
        } else {
            return maxIntegerValue;
        }
    }

    /**
     * Gets the value of the maxVariableRefDepth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxVariableRefDepth() {
        return maxVariableRefDepth;
    }

    /**
     * Gets the value of the maxPolicyRefDepth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxPolicyRefDepth() {
        return maxPolicyRefDepth;
    }

    /**
     * Gets the value of the clientRequestErrorVerbosityLevel property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getClientRequestErrorVerbosityLevel() {
        if (clientRequestErrorVerbosityLevel == null) {
            return new BigInteger("0");
        } else {
            return clientRequestErrorVerbosityLevel;
        }
    }

    public List<String> getAttributeDatatypes() {
        List<String> ret;
        if (attributeDatatypes == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(attributeDatatypes);
        }
        return ret;
    }

    public List<String> getFunctions() {
        List<String> ret;
        if (functions == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(functions);
        }
        return ret;
    }

    public List<String> getCombiningAlgorithms() {
        List<String> ret;
        if (combiningAlgorithms == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(combiningAlgorithms);
        }
        return ret;
    }

    public List<AbstractAttributeProvider> getAttributeProviders() {
        List<AbstractAttributeProvider> ret;
        if (attributeProviders == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(attributeProviders);
        }
        return ret;
    }

    public List<AbstractPolicyProvider> getPolicyProviders() {
        List<AbstractPolicyProvider> ret;
        if (policyProviders == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(policyProviders);
        }
        return ret;
    }

    public List<InOutProcChain> getIoProcChains() {
        List<InOutProcChain> ret;
        if (ioProcChains == null) {
            ret = Collections.emptyList();
        } else {
            ret = Collections.unmodifiableList(ioProcChains);
        }
        return ret;
    }

}
