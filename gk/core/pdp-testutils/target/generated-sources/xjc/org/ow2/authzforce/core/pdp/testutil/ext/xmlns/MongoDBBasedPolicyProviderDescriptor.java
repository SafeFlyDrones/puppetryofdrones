//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ow2.authzforce.core.pdp.testutil.ext.xmlns;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlType;
import org.ow2.authzforce.xmlns.pdp.ext.AbstractPolicyProvider;


/**
 * 
 *             Configuration descriptor for the policy provider module that retrieves policies (given a Policy(Set)IdReference) from documents in a MongoDB-hosted collection. The document model must correspond to JSON form:
 *             {id: $policy_ID, version: $policy_version, type: $policy_type, content: $policy_doc},
 *             where $policy_ID must be a valid XACML 3.0 PolicyId, $policy_version a valid XACML 3.0 policy version, $policy_type either '{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}Policy' if the
 *             policy is XACML 3.0 Policy or '{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}PolicySet' if it is a XACML 3.0 PolicySet, and $policy_doc a valid XACML 3.0 Policy or PolicySet according to
 *             $policy_type.
 *             TODO: add settings to control the behavior of the client (MongoClientOptions) and its credentials (MongoCredentials).
 *          
 * 
 * <p>Java class for MongoDBBasedPolicyProviderDescriptor complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="MongoDBBasedPolicyProviderDescriptor">
 *   <complexContent>
 *     <extension base="{http://authzforce.github.io/xmlns/pdp/ext/3}AbstractPolicyProvider">
 *       <attribute name="serverHost" use="required">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             <pattern value="localhost|([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="serverPort" use="required">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *             <minInclusive value="1"/>
 *             <maxInclusive value="65535"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="dbName" use="required">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             <minLength value="1"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *       <attribute name="collectionName" use="required">
 *         <simpleType>
 *           <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             <minLength value="1"/>
 *           </restriction>
 *         </simpleType>
 *       </attribute>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MongoDBBasedPolicyProviderDescriptor")
public class MongoDBBasedPolicyProviderDescriptor
    extends AbstractPolicyProvider
{

    @XmlAttribute(name = "serverHost", required = true)
    protected String serverHost;
    @XmlAttribute(name = "serverPort", required = true)
    protected int serverPort;
    @XmlAttribute(name = "dbName", required = true)
    protected String dbName;
    @XmlAttribute(name = "collectionName", required = true)
    protected String collectionName;

    /**
     * Default no-arg constructor
     * 
     */
    public MongoDBBasedPolicyProviderDescriptor() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public MongoDBBasedPolicyProviderDescriptor(final String serverHost, final int serverPort, final String dbName, final String collectionName) {
        this.serverHost = serverHost;
        this.serverPort = serverPort;
        this.dbName = dbName;
        this.collectionName = collectionName;
    }

    /**
     * Gets the value of the serverHost property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getServerHost() {
        return serverHost;
    }

    /**
     * Sets the value of the serverHost property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setServerHost(String value) {
        this.serverHost = value;
    }

    /**
     * Gets the value of the serverPort property.
     * 
     */
    public int getServerPort() {
        return serverPort;
    }

    /**
     * Sets the value of the serverPort property.
     * 
     */
    public void setServerPort(int value) {
        this.serverPort = value;
    }

    /**
     * Gets the value of the dbName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDbName() {
        return dbName;
    }

    /**
     * Sets the value of the dbName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDbName(String value) {
        this.dbName = value;
    }

    /**
     * Gets the value of the collectionName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCollectionName() {
        return collectionName;
    }

    /**
     * Sets the value of the collectionName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCollectionName(String value) {
        this.collectionName = value;
    }

}
