//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ow2.authzforce.core.pdp.testutil.ext.xmlns;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;
import oasis.names.tc.xacml._3_0.core.schema.wd_17.Attributes;
import org.ow2.authzforce.xmlns.pdp.ext.AbstractAttributeProvider;


/**
 * 
 *             Test Attribute Provider configuration descriptor. This Provider is used for test purposes only. It can be
 *             configured to support any attribute but returns always an empty bag as attribute value.
 *          
 * 
 * <p>Java class for TestAttributeProviderDescriptor complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="TestAttributeProviderDescriptor">
 *   <complexContent>
 *     <extension base="{http://authzforce.github.io/xmlns/pdp/ext/3}AbstractAttributeProvider">
 *       <sequence>
 *         <element ref="{urn:oasis:names:tc:xacml:3.0:core:schema:wd-17}Attributes" maxOccurs="10"/>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TestAttributeProviderDescriptor", propOrder = {
    "attributes"
})
public class TestAttributeProviderDescriptor
    extends AbstractAttributeProvider
{

    @XmlElement(name = "Attributes", namespace = "urn:oasis:names:tc:xacml:3.0:core:schema:wd-17", required = true)
    protected List<Attributes> attributes;

    /**
     * Default no-arg constructor
     * 
     */
    public TestAttributeProviderDescriptor() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TestAttributeProviderDescriptor(final List<Attributes> attributes) {
        this.attributes = attributes;
    }

    /**
     * Gets the value of the attributes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the attributes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttributes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Attributes }
     * 
     * 
     * @return
     *     The value of the attributes property.
     */
    public List<Attributes> getAttributes() {
        if (attributes == null) {
            attributes = new ArrayList<>();
        }
        return this.attributes;
    }

}
